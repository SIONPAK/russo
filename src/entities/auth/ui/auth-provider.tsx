'use client'

import { useEffect } from 'react'
import { useAuthStore } from '../model/auth-store'

export function AuthProvider({ children }: { children: React.ReactNode }) {
  const { initializeAuth, user, isAuthenticated, userType } = useAuthStore()

  useEffect(() => {
    console.log('üî• AuthProvider mounted - forcing auth initialization')
    
    // ÎîîÎ≤ÑÍπÖÏùÑ ÏúÑÌïú Ï†ÑÏó≠ Ìï®Ïàò Ï∂îÍ∞Ä
    if (typeof window !== 'undefined') {
      (window as any).debugAuth = () => {
        console.log('üîç Current auth state:', { user, isAuthenticated, userType })
        console.log('üîç Current cookies:', document.cookie)
        return { user, isAuthenticated, userType, cookies: document.cookie }
      }
      
      (window as any).forceAuthCheck = initializeAuth
    }
    
    // ÌéòÏù¥ÏßÄ Î°úÎìú Ï¶âÏãú Ïù∏Ï¶ù ÏÉÅÌÉú ÌôïÏù∏
    const checkAuth = async () => {
      try {
        await initializeAuth()
        console.log('‚úÖ Auth initialization completed in AuthProvider')
      } catch (error) {
        console.error('‚ùå Auth initialization failed in AuthProvider:', error)
      }
    }

    checkAuth()
  }, [initializeAuth, user, isAuthenticated, userType])

  return <>{children}</>
} 